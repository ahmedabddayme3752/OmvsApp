version: '3.8'

services:
  # Production CouchDB with SSL and security
  couchdb:
    image: couchdb:latest
    container_name: omvs-couchdb-prod
    ports:
      - "5984:5984"
    environment:
      - COUCHDB_USER=admin
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-secure_production_password}
      - COUCHDB_SECRET=${COUCHDB_SECRET:-generate_random_secret}
    volumes:
      - couchdb_data:/opt/couchdb/data
      - couchdb_config:/opt/couchdb/etc/local.d
      - ./docker/couchdb.ini:/opt/couchdb/etc/local.d/docker.ini:ro
    networks:
      - omvs-network
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5984/_up"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Database Initialization for Production
  db-init:
    image: curlimages/curl:latest
    container_name: omvs-db-init-prod
    depends_on:
      couchdb:
        condition: service_healthy
    networks:
      - omvs-network
    environment:
      - COUCHDB_PASSWORD=${COUCHDB_PASSWORD:-secure_production_password}
    command: >
      sh -c "
        echo 'Initializing production databases...' &&
        sleep 15 &&
        curl -X PUT http://admin:$$COUCHDB_PASSWORD@couchdb:5984/omvs_distributions &&
        curl -X PUT http://admin:$$COUCHDB_PASSWORD@couchdb:5984/omvs_gps_photos &&
        echo 'Production databases initialized!'
      "
    restart: "no"

  # Reverse Proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: omvs-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx-prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - couchdb
    networks:
      - omvs-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: omvs-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - omvs-network
    restart: always
    profiles:
      - monitoring

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: omvs-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - omvs-network
    restart: always
    profiles:
      - monitoring

volumes:
  couchdb_data:
    driver: local
  couchdb_config:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  omvs-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16 